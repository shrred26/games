{"version":3,"sources":["snake/index.js","hooks/useArrow.js","flappy/index.js","Routes.js","reportWebVitals.js","index.js"],"names":["size","getGrid","array","midElem","Math","trunc","i","subArray","j","push","getFood","x","y","updateGrid","getColor","value","index1","index2","grid","floor","random","row","col","val","slice","directions","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","getHigh","window","localStorage","getItem","reducer","state","newState","getInitialState","snake","score","App","useState","error","setError","useReducer","setState","high","setHigh","key","dir","setDir","useEffect","detectKeyStroke","e","keyCode","document","addEventListener","removeEventListener","useArrow","animate","useRef","clearInterval","current","setInterval","newX","newY","setItem","copy","snakeCopy","eat","unshift","pop","length","className","type","onClick","map","item","subItem","refY","innerHeight","action","Vy","sec","columns","setColumns","animateFrame","container","setScore","gameOver","setGameOver","start","requestAnimationFrame","applyGravity","timestamp","cancelAnimationFrame","undefined","col1","col2","innerWidth","updateColumns","elapsed","forEach","column","abs","console","log","checkGameOver","clone","shift","sc","style","transform","index","height","basename","path","component","Flappy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Routes","getElementById"],"mappings":"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","file":"static/js/main.03661ae9.chunk.js","sourcesContent":["import './index.css';\nimport {useEffect, useState, useRef, useReducer} from 'react';\nimport useArrow from '../hooks/useArrow'\n\nconst size = 16;\n\nconst getGrid = (size) => {\n  let array = [];\n  const midElem = Math.trunc((size-1)/2);\n  for(let i=0;i<size;i++){\n    let subArray = [];\n    for(let j=0;j<size;j++){\n      (i === (midElem)&&j === midElem )? subArray.push(1): subArray.push(0);\n    }\n    array.push(subArray);\n  }\n  const {x,y} = getFood(array);\n  const newArr = updateGrid(x,y,2,array);\n  return newArr;\n}\n\nconst getColor = (value,index1,index2) => {\n  if(value===0) return (index1*size+index2+index1)%2===0?'dark':'light';\n  else if(value===1) return 'blue';\n  return 'red';\n}\n\nconst getFood = (grid) => {\n  const x = Math.floor(Math.random()*size);\n  const y = Math.floor(Math.random()*size);\n  if(grid[x][y]===1) return getFood(grid);\n  else return {x,y}\n}\n\nconst updateGrid = (row,col,val,grid) => {\n  return [...grid.slice(0,row),\n    [...grid[row].slice(0,col),val,...grid[row].slice(col+1)]\n    ,...grid.slice(row+1)];\n}\n\nconst directions = {\n  ArrowUp: [-1,0],\n  ArrowDown: [1,0],\n  ArrowLeft: [0,-1],\n  ArrowRight: [0,1]\n}\n\nconst getHigh = () =>(window.localStorage.getItem('highScore')||0);\n\nconst reducer = (state,newState) => ({...state,...newState})\nconst getInitialState = (size) => ({grid:getGrid(size),snake:[[Math.trunc((size-1)/2),Math.trunc((size-1)/2)]],score:0})\n\nfunction App() {\n  const [error,setError] = useState(false);\n  const [{grid,snake,score},setState] = useReducer(reducer,size,getInitialState);\n  const [high,setHigh] = useState(getHigh)\n  const key = useArrow();\n  const animate = useRef();\n\n  const reset = () => {\n    setError(false);\n    setState(getInitialState(size));\n  }\n\n  useEffect(()=>{\n    if(error) return;\n    clearInterval(animate.current);\n    animate.current = setInterval(()=>{\n      const dir = directions[key];\n      const newX = snake[0][0]+dir[0];\n      const newY = snake[0][1]+dir[1];\n      if(newX>size-1||newX<0||newY>size-1||newY<0||grid[newX][newY]===1){\n        setError('Game Over');\n        clearInterval(animate.current);\n        if(score>high){ \n          window.localStorage.setItem('highScore',score);\n          setHigh(score);\n        }\n        return;\n      }\n      const copy = [...grid];\n      const snakeCopy = [...snake];\n      let eat = false;\n      if(copy[newX][newY]==2) eat = true;\n      snakeCopy.unshift([newX,newY]);\n      copy[newX][newY] = 1;\n      if(!eat){\n        snakeCopy.pop();\n        copy[snake[snake.length-1][0]][snake[snake.length-1][1]] = 0;\n      }else{\n        const {x,y} = getFood(copy);\n        copy[x][y] = 2;\n      }\n      setState({grid:copy,snake:snakeCopy,score: (eat? score+1: score)})\n    },100)\n  })\n\n  return (\n    <div className=\"App\">\n      <div className='flex'>\n        {<h1>{error?error:`Score: ${score}`}</h1>}\n        <button type='button' onClick={reset}>Reset</button>\n        {<h2>{`HighScore: ${high}`}</h2>}\n      </div>\n      <div className=\"container\">\n        {grid.map((item,index1)=>(\n          item.map((subItem,index2)=>(\n            <div \n              className={`gridBlock ${getColor(subItem,index1,index2)}`}\n              key={index1*size+index2}\n             />\n          ))\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {useState,useEffect} from 'react';\r\n\r\nexport default () => {\r\n\r\n    const [dir,setDir] = useState('ArrowRight');\r\n\r\n    useEffect(()=>{\r\n        const detectKeyStroke = e=>{\r\n          if(e.keyCode>=37&&e.keyCode<=40){\r\n            if(dir===e.key) return;\r\n            if((dir===\"ArrowRight\"&&e.key===\"ArrowLeft\")||(dir===\"ArrowLeft\"&&e.key===\"ArrowRight\")) return;\r\n            if((dir===\"ArrowDown\"&&e.key===\"ArrowUp\")||(dir===\"ArrowUp\"&&e.key===\"ArrowDown\")) return;\r\n            setDir(e.key);\r\n          }\r\n        }\r\n        document.addEventListener('keydown',detectKeyStroke);\r\n        return ()=>{document.removeEventListener('keydown',detectKeyStroke);}\r\n      },[dir]);\r\n\r\n      return dir;\r\n}","import './index.css'\r\nimport {useEffect, useReducer, useRef, useState} from 'react'\r\n\r\nexport default () => {\r\n    const refY = useRef(window.innerHeight/2);\r\n\r\n    const reducer = (state,action)=>{\r\n        switch(action.type){\r\n            case 'gravity':\r\n                refY.current = state.y+(state.Vy*action.sec);\r\n                return {\r\n                    y: refY.current,\r\n                    Vy: state.Vy-200*action.sec\r\n                }\r\n            \r\n            case 'up':\r\n                return {\r\n                    y: state.y,\r\n                    Vy: action.Vy\r\n                }\r\n    \r\n            case 'setY':\r\n                return {\r\n                    y: action.y,\r\n                    Vy: state.Vy\r\n                }\r\n\r\n            case 'setBoth':\r\n                return {\r\n                    y: action.y,\r\n                    Vy: action.Vy\r\n                }\r\n    \r\n            default:\r\n                return state;    \r\n        }\r\n    }\r\n\r\n    const [{y},setState] = useReducer(reducer,{y:window.innerHeight/2,Vy:0});\r\n    const [columns,setColumns] = useState([]);\r\n    const animateFrame = useRef([]);\r\n    const container = useRef();\r\n    const [score,setScore] = useState(0);\r\n    const [gameOver,setGameOver] = useState(false);\r\n    const gap = 120;\r\n\r\n    useEffect(()=>{\r\n        if(!container) return;\r\n        let start;\r\n        const applyGravity = (timestamp) => {\r\n          if(gameOver) {cancelAnimationFrame(animateFrame.current[0]); return;}\r\n          if (start === undefined) start = timestamp;\r\n          const elapsed = timestamp - start;\r\n          setState({type:'gravity',sec:elapsed/1000});\r\n          start = timestamp;\r\n          animateFrame.current[0] = requestAnimationFrame(applyGravity);\r\n        }\r\n        animateFrame.current[0] = requestAnimationFrame(applyGravity);\r\n        return () => cancelAnimationFrame(animateFrame.current[0]);\r\n    },[container,gameOver]);\r\n    \r\n    useEffect(()=>{\r\n        if(y>window.innerHeight||y<4) setGameOver(true);\r\n    },[y])\r\n\r\n    useEffect(()=>{\r\n        const detectKeyStroke = (e) =>{\r\n            if(e.key===\"ArrowUp\") setState({type:'up',Vy: 120});\r\n        }\r\n        document.addEventListener('keydown',detectKeyStroke);\r\n        return ()=>{document.removeEventListener('keydown',detectKeyStroke);}\r\n      },[]);\r\n\r\n    useEffect(()=>{\r\n        const createColumn = () =>{\r\n            if(gameOver) {clearInterval(animateFrame.current[1]); return;}\r\n            const col1 = window.innerHeight*1/4 + Math.random()*(window.innerHeight*1/2-120);\r\n            const col2 = window.innerHeight - col1 - 120;\r\n            setColumns(columns=>{\r\n                const clone = [...columns, {x:window.innerWidth-30,col1,col2}];\r\n                return clone;\r\n            });\r\n        }\r\n        animateFrame.current[1] = setInterval(createColumn,1000);\r\n        return () =>{clearInterval(animateFrame.current[1]);}\r\n    },[gameOver]);\r\n\r\n    const checkGameOver = (columns) =>{\r\n        columns.forEach((column)=>{\r\n            if(Math.abs(column.x - 80)<13){\r\n                const y= refY.current;\r\n                console.log(y,column.col2,column.col2+gap);\r\n                if(y<column.col2||y>column.col2+gap) {\r\n                    setGameOver(true);\r\n                }\r\n                return;\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        let start;\r\n        const updateColumns = (timestamp) =>{\r\n            if(gameOver) {cancelAnimationFrame(animateFrame.current[2]); return;}\r\n            if(start===undefined) start = timestamp;\r\n            const elapsed = timestamp - start;\r\n            setColumns(columns=>{\r\n                if(columns.length>0) checkGameOver(columns);\r\n                const clone = [...columns].map((column)=>({...column,x:column.x - elapsed*150/1000}));\r\n                if(clone[0]&&clone[0].x<0){ clone.shift(); setScore(sc=>sc+0.5);}\r\n                return clone;\r\n            });\r\n            start = timestamp;\r\n            animateFrame.current[2] = requestAnimationFrame(updateColumns);\r\n        }\r\n        animateFrame.current[2] = requestAnimationFrame(updateColumns);\r\n        return () => cancelAnimationFrame(animateFrame.current[2]);\r\n    },[gameOver])\r\n\r\n    const reset = () =>{\r\n        setColumns([]);\r\n        setState({type:'setBoth',y:window.innerHeight/2,Vy:0});\r\n        setScore(0);\r\n        setGameOver(false);\r\n    }\r\n\r\n    return (\r\n        <div className='sky'>\r\n            <h1 className='score'>{`Score: ${score}`}</h1>\r\n            {gameOver&&<div className='center'>\r\n                <h2>Game Over</h2>\r\n                <button type='button' onClick={reset}>Reset</button>\r\n            </div>}\r\n            <div className='atCenter' style={{transform:`translate(calc(80px - 50%), ${-y}px)`}}>bird</div>\r\n            {columns.map((column,index)=>(\r\n                <div key={index} style={{transform:`translate(${column.x}px,0)`}} className='column'>\r\n                    <div style={{height: `${column.col1}px`}} className='pipe'/>\r\n                    <div style={{height: `120px`}}/>\r\n                    <div style={{height: `${column.col2}px`}} className='pipe'/>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Snake from \"./snake\";\r\nimport Flappy from './flappy'\r\n\r\nexport default () => (\r\n        <Router basename=\"/games\">\r\n            <Switch>\r\n                <Route path='/snake'>\r\n                    <Snake/>\r\n                </Route>\r\n                <Route path='/flappy'>\r\n                    <Flappy/>\r\n                </Route>\r\n                <Route component={ Flappy } />\r\n            </Switch>\r\n        </Router>\r\n)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}